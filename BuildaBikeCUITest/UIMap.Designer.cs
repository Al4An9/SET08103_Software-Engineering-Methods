// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BuildaBikeCUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfRadioButton uIRoadBike20RadioButton = this.UIMainWindowWindow.UIRoadBike20RadioButton;
            WpfComboBox uIComboBoxColorComboBox = this.UIMainWindowWindow.UIComboBoxColorComboBox;
            WpfCheckBox uISmall1718100CheckBox = this.UIMainWindowWindow.UISmall1718100CheckBox;
            WpfCheckBox uISingleSpeed20CheckBox = this.UIMainWindowWindow.UISingleSpeed20CheckBox;
            WpfCheckBox uICarbonSaddle20CheckBox = this.UIMainWindowWindow.UICarbonSaddle20CheckBox;
            WpfCheckBox uIBullhorn20CheckBox = this.UIMainWindowWindow.UIBullhorn20CheckBox;
            WpfCheckBox uIRoadWheels30CheckBox = this.UIMainWindowWindow.UIRoadWheels30CheckBox;
            WpfCheckBox uIRimBrakes20CheckBox = this.UIMainWindowWindow.UIRimBrakes20CheckBox;
            WpfCheckBox uIUpgradeto3yearwarranCheckBox = this.UIMainWindowWindow.UIUpgradeto3yearwarranCheckBox;
            WpfButton uISubmitPreferenceButton = this.UIMainWindowWindow.UISubmitPreferenceButton;
            WinButton uIYesButton = this.UIConfirmationWindow.UIYesWindow.UIYesButton;
            WpfButton uIClearButton = this.UIMainWindowWindow.UIClearButton;
            WpfRadioButton uIMountainBike50RadioButton = this.UIMainWindowWindow.UIMountainBike50RadioButton;
            WpfCheckBox uILarge1920150CheckBox = this.UIMainWindowWindow.UILarge1920150CheckBox;
            WpfCheckBox uIItem24Speed150CheckBox = this.UIMainWindowWindow.UIItem24Speed150CheckBox;
            WpfCheckBox uIGelSaddle30CheckBox = this.UIMainWindowWindow.UIGelSaddle30CheckBox;
            WpfCheckBox uIFlat15CheckBox = this.UIMainWindowWindow.UIFlat15CheckBox;
            WpfCheckBox uIOffRoadWheels50CheckBox = this.UIMainWindowWindow.UIOffRoadWheels50CheckBox;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WpfCheckBox uIDiscBrakes50CheckBox = this.UIMainWindowWindow.UIDiscBrakes50CheckBox;
            #endregion

            // The recording for the application under test '\\napier-mail.napier.ac.uk\students\School of Computing\User Data\40288545\My Profile\Desktop\Presentation\Presentation\Presentation\bin\Debug\Presentation.exe' may not be correct as it is located on a network share. Please install the application on a local path.

            // Select 'Road Bike £20' radio button
            uIRoadBike20RadioButton.Selected = this.RecordedMethod1Params.UIRoadBike20RadioButtonSelected;

            // Select 'Green £20' in 'ComboBoxColor' combo box
            uIComboBoxColorComboBox.SelectedItem = this.RecordedMethod1Params.UIComboBoxColorComboBoxSelectedItem;

            // Select 'Small(17"-18") £100' check box
            uISmall1718100CheckBox.Checked = this.RecordedMethod1Params.UISmall1718100CheckBoxChecked;

            // Select 'Single Speed £20' check box
            uISingleSpeed20CheckBox.Checked = this.RecordedMethod1Params.UISingleSpeed20CheckBoxChecked;

            // Select 'Carbon Saddle £20' check box
            uICarbonSaddle20CheckBox.Checked = this.RecordedMethod1Params.UICarbonSaddle20CheckBoxChecked;

            // Select 'Bullhorn £20' check box
            uIBullhorn20CheckBox.Checked = this.RecordedMethod1Params.UIBullhorn20CheckBoxChecked;

            // Select 'Road Wheels £30' check box
            uIRoadWheels30CheckBox.Checked = this.RecordedMethod1Params.UIRoadWheels30CheckBoxChecked;

            // Select 'Rim Brakes £20' check box
            uIRimBrakes20CheckBox.Checked = this.RecordedMethod1Params.UIRimBrakes20CheckBoxChecked;

            // Select 'Upgrade to 3 year warranty £50' check box
            uIUpgradeto3yearwarranCheckBox.Checked = this.RecordedMethod1Params.UIUpgradeto3yearwarranCheckBoxChecked;

            // Click 'Submit Preference' button
            Mouse.Click(uISubmitPreferenceButton, new Point(57, 35));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(62, 14));

            // Click 'Clear' button
            Mouse.Click(uIClearButton, new Point(78, 24));

            // Select 'Mountain Bike £50' radio button
            uIMountainBike50RadioButton.Selected = this.RecordedMethod1Params.UIMountainBike50RadioButtonSelected;

            // Select 'Blue £20' in 'ComboBoxColor' combo box
            uIComboBoxColorComboBox.SelectedItem = this.RecordedMethod1Params.UIComboBoxColorComboBoxSelectedItem1;

            // Clear 'Small(17"-18") £100' check box
            uISmall1718100CheckBox.Checked = this.RecordedMethod1Params.UISmall1718100CheckBoxChecked1;

            // Select 'Large(19"-20") £150' check box
            uILarge1920150CheckBox.Checked = this.RecordedMethod1Params.UILarge1920150CheckBoxChecked;

            // Clear 'Single Speed £20' check box
            uISingleSpeed20CheckBox.Checked = this.RecordedMethod1Params.UISingleSpeed20CheckBoxChecked1;

            // Select '24-Speed £150' check box
            uIItem24Speed150CheckBox.Checked = this.RecordedMethod1Params.UIItem24Speed150CheckBoxChecked;

            // Clear 'Carbon Saddle £20' check box
            uICarbonSaddle20CheckBox.Checked = this.RecordedMethod1Params.UICarbonSaddle20CheckBoxChecked1;

            // Select 'Gel Saddle £30' check box
            uIGelSaddle30CheckBox.Checked = this.RecordedMethod1Params.UIGelSaddle30CheckBoxChecked;

            // Clear 'Bullhorn £20' check box
            uIBullhorn20CheckBox.Checked = this.RecordedMethod1Params.UIBullhorn20CheckBoxChecked1;

            // Select 'Flat £15' check box
            uIFlat15CheckBox.Checked = this.RecordedMethod1Params.UIFlat15CheckBoxChecked;

            // Clear 'Road Wheels £30' check box
            uIRoadWheels30CheckBox.Checked = this.RecordedMethod1Params.UIRoadWheels30CheckBoxChecked1;

            // Select 'Off-Road Wheels £50' check box
            uIOffRoadWheels50CheckBox.Checked = this.RecordedMethod1Params.UIOffRoadWheels50CheckBoxChecked;

            // Clear 'Rim Brakes £20' check box
            uIRimBrakes20CheckBox.Checked = this.RecordedMethod1Params.UIRimBrakes20CheckBoxChecked1;

            // Click 'Submit Preference' button
            Mouse.Click(uISubmitPreferenceButton, new Point(66, 50));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(65, 16));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(56, 15));

            // Click 'Clear' button
            Mouse.Click(uIClearButton, new Point(84, 15));

            // Select 'Disc Brakes £50' check box
            uIDiscBrakes50CheckBox.Checked = this.RecordedMethod1Params.UIDiscBrakes50CheckBoxChecked;

            // Click 'Submit Preference' button
            Mouse.Click(uISubmitPreferenceButton, new Point(35, 22));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(49, 13));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIConfirmationWindow UIConfirmationWindow
        {
            get
            {
                if ((this.mUIConfirmationWindow == null))
                {
                    this.mUIConfirmationWindow = new UIConfirmationWindow();
                }
                return this.mUIConfirmationWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIConfirmationWindow mUIConfirmationWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Road Bike £20' radio button
        /// </summary>
        public bool UIRoadBike20RadioButtonSelected = true;
        
        /// <summary>
        /// Select 'Green £20' in 'ComboBoxColor' combo box
        /// </summary>
        public string UIComboBoxColorComboBoxSelectedItem = "Green £20";
        
        /// <summary>
        /// Select 'Small(17"-18") £100' check box
        /// </summary>
        public bool UISmall1718100CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Single Speed £20' check box
        /// </summary>
        public bool UISingleSpeed20CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Carbon Saddle £20' check box
        /// </summary>
        public bool UICarbonSaddle20CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Bullhorn £20' check box
        /// </summary>
        public bool UIBullhorn20CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Road Wheels £30' check box
        /// </summary>
        public bool UIRoadWheels30CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Rim Brakes £20' check box
        /// </summary>
        public bool UIRimBrakes20CheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Upgrade to 3 year warranty £50' check box
        /// </summary>
        public bool UIUpgradeto3yearwarranCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Mountain Bike £50' radio button
        /// </summary>
        public bool UIMountainBike50RadioButtonSelected = true;
        
        /// <summary>
        /// Select 'Blue £20' in 'ComboBoxColor' combo box
        /// </summary>
        public string UIComboBoxColorComboBoxSelectedItem1 = "Blue £20";
        
        /// <summary>
        /// Clear 'Small(17"-18") £100' check box
        /// </summary>
        public bool UISmall1718100CheckBoxChecked1 = false;
        
        /// <summary>
        /// Select 'Large(19"-20") £150' check box
        /// </summary>
        public bool UILarge1920150CheckBoxChecked = true;
        
        /// <summary>
        /// Clear 'Single Speed £20' check box
        /// </summary>
        public bool UISingleSpeed20CheckBoxChecked1 = false;
        
        /// <summary>
        /// Select '24-Speed £150' check box
        /// </summary>
        public bool UIItem24Speed150CheckBoxChecked = true;
        
        /// <summary>
        /// Clear 'Carbon Saddle £20' check box
        /// </summary>
        public bool UICarbonSaddle20CheckBoxChecked1 = false;
        
        /// <summary>
        /// Select 'Gel Saddle £30' check box
        /// </summary>
        public bool UIGelSaddle30CheckBoxChecked = true;
        
        /// <summary>
        /// Clear 'Bullhorn £20' check box
        /// </summary>
        public bool UIBullhorn20CheckBoxChecked1 = false;
        
        /// <summary>
        /// Select 'Flat £15' check box
        /// </summary>
        public bool UIFlat15CheckBoxChecked = true;
        
        /// <summary>
        /// Clear 'Road Wheels £30' check box
        /// </summary>
        public bool UIRoadWheels30CheckBoxChecked1 = false;
        
        /// <summary>
        /// Select 'Off-Road Wheels £50' check box
        /// </summary>
        public bool UIOffRoadWheels50CheckBoxChecked = true;
        
        /// <summary>
        /// Clear 'Rim Brakes £20' check box
        /// </summary>
        public bool UIRimBrakes20CheckBoxChecked1 = false;
        
        /// <summary>
        /// Select 'Disc Brakes £50' check box
        /// </summary>
        public bool UIDiscBrakes50CheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton UIRoadBike20RadioButton
        {
            get
            {
                if ((this.mUIRoadBike20RadioButton == null))
                {
                    this.mUIRoadBike20RadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIRoadBike20RadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "RdBtnRoadBike";
                    this.mUIRoadBike20RadioButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRoadBike20RadioButton;
            }
        }
        
        public WpfComboBox UIComboBoxColorComboBox
        {
            get
            {
                if ((this.mUIComboBoxColorComboBox == null))
                {
                    this.mUIComboBoxColorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIComboBoxColorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ComboBoxColor";
                    this.mUIComboBoxColorComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIComboBoxColorComboBox;
            }
        }
        
        public WpfCheckBox UISmall1718100CheckBox
        {
            get
            {
                if ((this.mUISmall1718100CheckBox == null))
                {
                    this.mUISmall1718100CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUISmall1718100CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxSmall";
                    this.mUISmall1718100CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISmall1718100CheckBox;
            }
        }
        
        public WpfCheckBox UISingleSpeed20CheckBox
        {
            get
            {
                if ((this.mUISingleSpeed20CheckBox == null))
                {
                    this.mUISingleSpeed20CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUISingleSpeed20CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxSingleSpeed";
                    this.mUISingleSpeed20CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISingleSpeed20CheckBox;
            }
        }
        
        public WpfCheckBox UICarbonSaddle20CheckBox
        {
            get
            {
                if ((this.mUICarbonSaddle20CheckBox == null))
                {
                    this.mUICarbonSaddle20CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUICarbonSaddle20CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxCarbonSaddle";
                    this.mUICarbonSaddle20CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICarbonSaddle20CheckBox;
            }
        }
        
        public WpfCheckBox UIBullhorn20CheckBox
        {
            get
            {
                if ((this.mUIBullhorn20CheckBox == null))
                {
                    this.mUIBullhorn20CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIBullhorn20CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxBullhorn";
                    this.mUIBullhorn20CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBullhorn20CheckBox;
            }
        }
        
        public WpfCheckBox UIRoadWheels30CheckBox
        {
            get
            {
                if ((this.mUIRoadWheels30CheckBox == null))
                {
                    this.mUIRoadWheels30CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIRoadWheels30CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxRoadWheels";
                    this.mUIRoadWheels30CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRoadWheels30CheckBox;
            }
        }
        
        public WpfCheckBox UIRimBrakes20CheckBox
        {
            get
            {
                if ((this.mUIRimBrakes20CheckBox == null))
                {
                    this.mUIRimBrakes20CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIRimBrakes20CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxRimBrakes";
                    this.mUIRimBrakes20CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRimBrakes20CheckBox;
            }
        }
        
        public WpfCheckBox UIUpgradeto3yearwarranCheckBox
        {
            get
            {
                if ((this.mUIUpgradeto3yearwarranCheckBox == null))
                {
                    this.mUIUpgradeto3yearwarranCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIUpgradeto3yearwarranCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxWarranty";
                    this.mUIUpgradeto3yearwarranCheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIUpgradeto3yearwarranCheckBox;
            }
        }
        
        public WpfButton UISubmitPreferenceButton
        {
            get
            {
                if ((this.mUISubmitPreferenceButton == null))
                {
                    this.mUISubmitPreferenceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISubmitPreferenceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "BtnSubmitPreference";
                    this.mUISubmitPreferenceButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISubmitPreferenceButton;
            }
        }
        
        public WpfButton UIClearButton
        {
            get
            {
                if ((this.mUIClearButton == null))
                {
                    this.mUIClearButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIClearButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "BtnClear";
                    this.mUIClearButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIClearButton;
            }
        }
        
        public WpfRadioButton UIMountainBike50RadioButton
        {
            get
            {
                if ((this.mUIMountainBike50RadioButton == null))
                {
                    this.mUIMountainBike50RadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIMountainBike50RadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "RdBtnMountainBike";
                    this.mUIMountainBike50RadioButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIMountainBike50RadioButton;
            }
        }
        
        public WpfCheckBox UILarge1920150CheckBox
        {
            get
            {
                if ((this.mUILarge1920150CheckBox == null))
                {
                    this.mUILarge1920150CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUILarge1920150CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxLarge";
                    this.mUILarge1920150CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUILarge1920150CheckBox;
            }
        }
        
        public WpfCheckBox UIItem24Speed150CheckBox
        {
            get
            {
                if ((this.mUIItem24Speed150CheckBox == null))
                {
                    this.mUIItem24Speed150CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIItem24Speed150CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBox24Speed";
                    this.mUIItem24Speed150CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItem24Speed150CheckBox;
            }
        }
        
        public WpfCheckBox UIGelSaddle30CheckBox
        {
            get
            {
                if ((this.mUIGelSaddle30CheckBox == null))
                {
                    this.mUIGelSaddle30CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIGelSaddle30CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxGelSaddle";
                    this.mUIGelSaddle30CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIGelSaddle30CheckBox;
            }
        }
        
        public WpfCheckBox UIFlat15CheckBox
        {
            get
            {
                if ((this.mUIFlat15CheckBox == null))
                {
                    this.mUIFlat15CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIFlat15CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxFlat";
                    this.mUIFlat15CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIFlat15CheckBox;
            }
        }
        
        public WpfCheckBox UIOffRoadWheels50CheckBox
        {
            get
            {
                if ((this.mUIOffRoadWheels50CheckBox == null))
                {
                    this.mUIOffRoadWheels50CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIOffRoadWheels50CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxOffRoad";
                    this.mUIOffRoadWheels50CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIOffRoadWheels50CheckBox;
            }
        }
        
        public WpfCheckBox UIDiscBrakes50CheckBox
        {
            get
            {
                if ((this.mUIDiscBrakes50CheckBox == null))
                {
                    this.mUIDiscBrakes50CheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIDiscBrakes50CheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ChkBoxDiscBrakes";
                    this.mUIDiscBrakes50CheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDiscBrakes50CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mUIRoadBike20RadioButton;
        
        private WpfComboBox mUIComboBoxColorComboBox;
        
        private WpfCheckBox mUISmall1718100CheckBox;
        
        private WpfCheckBox mUISingleSpeed20CheckBox;
        
        private WpfCheckBox mUICarbonSaddle20CheckBox;
        
        private WpfCheckBox mUIBullhorn20CheckBox;
        
        private WpfCheckBox mUIRoadWheels30CheckBox;
        
        private WpfCheckBox mUIRimBrakes20CheckBox;
        
        private WpfCheckBox mUIUpgradeto3yearwarranCheckBox;
        
        private WpfButton mUISubmitPreferenceButton;
        
        private WpfButton mUIClearButton;
        
        private WpfRadioButton mUIMountainBike50RadioButton;
        
        private WpfCheckBox mUILarge1920150CheckBox;
        
        private WpfCheckBox mUIItem24Speed150CheckBox;
        
        private WpfCheckBox mUIGelSaddle30CheckBox;
        
        private WpfCheckBox mUIFlat15CheckBox;
        
        private WpfCheckBox mUIOffRoadWheels50CheckBox;
        
        private WpfCheckBox mUIDiscBrakes50CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIConfirmationWindow : WinWindow
    {
        
        public UIConfirmationWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirmation";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Confirmation");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Confirmation");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Confirmation");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
